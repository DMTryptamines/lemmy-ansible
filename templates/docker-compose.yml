version: '2'

networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  lemmy:
    image: {{ lemmy_docker_image }}
    ports:
      - "127.0.0.1:{{ lemmy_port }}:8536"
    restart: always
    environment:
      - RUST_LOG="warn,lemmy_server=info,lemmy_api=info,lemmy_api_common=info,lemmy_api_crud=info,lemmy_apub=info,lemmy_db_queries=info,lemmy_db_schema=info,lemmy_db_views=info,lemmy_db_views_actor=info,lemmy_db_views_moderator=info,lemmy_routes=info,lemmy_utils=info,lemmy_websocket=info"
    volumes:
      - ./lemmy.hjson:/config/config.hjson
    depends_on:
      - postgres
      - pictrs
      - otel
    networks:
      - monitor-net
#    labels:
#      org.label-schema.group: "lemmy"

  lemmy-ui:
    image: {{ lemmy_docker_ui_image }}
    ports:
      - "127.0.0.1:{{ lemmy_ui_port }}:1234"
    restart: always
    environment:
      - LEMMY_INTERNAL_HOST=lemmy:8536
      - LEMMY_EXTERNAL_HOST={{ domain }}
      - LEMMY_HTTPS=true
    volumes:
      - ./volumes/lemmy-ui/extra_themes:/app/extra_themes
    depends_on:
      - lemmy
    networks:
      - monitor-net
#    labels:
#      org.label-schema.group: "lemmy"

  lemmy-uit:
    image: {{ lemmy_docker_uit_image }}
    ports:
      - "127.0.0.1:{{ lemmy_uit_port }}:1234"
    restart: always
    environment:
      - LEMMY_INTERNAL_HOST=lemmy:8536
      - LEMMY_EXTERNAL_HOST={{ domain2 }}
      - LEMMY_HTTPS=true
    volumes:
      - ./volumes/lemmy-uit/extra_themes:/app/extra_themes
    depends_on:
      - lemmy
    networks:
      - monitor-net
#    labels:
#      org.label-schema.group: "lemmy"

  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=lemmy
      - POSTGRES_PASSWORD={{ postgres_password }}
      - POSTGRES_DB=lemmy
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - monitor-net
#    labels:
#      org.label-schema.group: "lemmy"

  pictrs:
    image: asonix/pictrs:0.3.1
    user: 991:991
    environment:
      - PICTRS_OPENTELEMETRY_URL=http://otel:4137
    ports:
      - "127.0.0.1:{{ pictrs_port }}:8080"
    volumes:
      - ./volumes/pictrs:/mnt
    restart: always
    mem_limit: 200m
    depends_on:
      - otel
    networks:
      - monitor-net
#    labels:
#      org.label-schema.group: "lemmy"

  postfix:
    image: mwader/postfix-relay
    environment:
      - POSTFIX_myhostname={{ domain }}
    restart: "always"
    networks:
      - monitor-net
#    labels:
#      org.label-schema.group: "lemmy"

  otel:
    image: otel/opentelemetry-collector:latest
    command: --config otel-local-config.yaml
    ports:
      - "4317:4317"
    volumes:
      - ./otel.yml:/otel-local-config.yaml
    restart: always
    depends_on:
      - jaeger
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  jaeger:
    image: jaegertracing/all-in-one:1
    ports:
      - "14250:14250"
      # To view traces, visit http://localhost:16686
      - "16686:16686"
    restart: always
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  prometheus:
    image: prom/prometheus:v2.36.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:v0.24.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v1.3.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.44.0
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:8.5.4
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER={{ADMIN_USER}}
      - GF_SECURITY_ADMIN_PASSWORD={{ADMIN_PASSWORD}}
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_USERS_ALLOW_SIGN_UP=false
#      - GF_SERVER_PROTOCOL=https
#      - GF_SERVER_HTTP_ADDR=grafana.tryp.digital
#      - GF_SERVER_ENABLE_GZIP=true
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  pushgateway:
    image: prom/pushgateway:v1.4.3
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  caddy:
    image: caddy:2.3.0
    container_name: caddy
    ports:
      - "3000:3000"
      - "3100:3100"
      - "9090:9090"
      - "9093:9093"
      - "9091:9091"
      - "443:443"
      - "80:80"
    volumes:
      - ./caddy:/etc/caddy
    environment:
      - ADMIN_USER={{ADMIN_USER}}
      - ADMIN_PASSWORD={{ADMIN_PASSWORD}}
      - ADMIN_PASSWORD_HASH={{ADMIN_PASSWORD_HASH}}
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  loki:
    image: grafana/loki:2.5.0
    container_name: loki
    restart: unless-stopped
    expose:
      - 3100
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  promtail:
    image: grafana/promtail:2.5.0
    container_name: promtail
    restart: unless-stopped
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
